@{
    var activityId = ViewBag.ActivityId;
    var cartIdFromCookie = int.Parse(Context.Request.Cookies["CartId"] ?? "0");
}

@section Styles{
    <style>
        .date-picker {
            width: 300px;
            border: 1px solid #ccc;
            padding: 10px;
            margin: 50px auto;
        }

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 10px;
        }

        .calendar {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            gap: 5px;
        }

        .day {
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
            cursor: pointer;
        }

        .selected {
            background-color: #3498db;
            color: white;
        }

        .other-month {
            color: #ccc;
        }

        .day-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            text-align: center;
            border: 0.5px solid transparent;
            transition: border 0.3s ease-in-out;
        }

            .day-container:hover {
                border-color: #ccc;
                /* 使用者懸停時，邊框顏色變為 #ccc */
            }


        .price {
            font-size: 0.8em;
        }


        .disabled {
            opacity: 0.5;
            /* 設置透明度為 50% */
            position: relative;
        }

            .disabled::after {
                content: 'x';
                /* 在日期元素的後面添加一個 "x" 標記 */
                position: absolute;
                top: 80%;
                left: 50%;
                transform: translate(-50%, -50%);
                color: lightgray;
                /* 可以自行調整顏色 */
            }
    </style>
}
<div id="app">
    <div>
        <div>{{name}}</div>
        <img v-bind:src="image" />
        <div>{{regionName}}</div>
        <div>{{attractionName}}</div>
        <div>{{description}}</div>
    </div>
    <div class="row">
        <div class="date-picker col-6">
            <div class="header">
                <button id="prevMonth" @@click="changeMonth(-1)">&lt;</button>
                <h2 id="monthYear" v-model>{{currentYear}}年  {{currentMonth}}月</h2>
                <button id="nextMonth" @@click="changeMonth(1)">&gt;</button>
            </div>
            <div class="calendar" id="calendar">
                <div v-for="(dateObj, index) in calendarDates" :key="date">
                    <div class="day-container" v-bind:class="{'disabled':dateObj.price==null,'selected':dateObj.selected==true}"
                         v-bind:data-id="dateObj.id "
                         v-bind:data-quantity="dateObj.quantity" @@click="selectDate(dateObj)">
                        <template v-if="dateObj.date === null">
                            <div class="day other-month"></div>
                        </template>
                        <template v-else-if="dateObj.price !== null">
                            <div class="day">{{ dateObj.date.getDate() }}</div>
                            <span class="price">{{ dateObj.price }}</span>
                        </template>
                        <template v-else>
                            <div class="day">{{ dateObj.date.getDate() }}</div>
                        </template>
                    </div>
                </div>
            </div>
        </div>
        <div id="buyingContainer" class="col-6">
            <br />
            <h3>選擇方案</h3>
            <br />
            <div>{{selectedDate}}</div>
            <div>產品編號:{{selectedProductId}}</div>
            <div>價格:{{selectedPrice}}</div>
            <div>可購買數量:{{selectedQuantity}}</div>
            <div>
                <input v-model="inputQuantity" type="number" min="1" v-bind:max="selectedQuantity" />
            </div>
            <button @@click="addToCart()" class="btn btn-primary">加入購物車</button>
        </div>
    </div>
</div>





@section Scripts{
    <script src="https://unpkg.com/vue@3.2.36/dist/vue.global.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.4.0/axios.min.js"
            integrity="sha512-uMtXmF28A2Ab/JJO2t/vYhlaa/3ahUOgj1Zf27M5rOo8/+fcTUVH0/E0ll68njmjrLqOBjXM3V9NiPFL5ywWPQ=="
            crossorigin="anonymous" referrerpolicy="no-referrer"></script>



    <script>
        let baseAddress = "https://localhost:7251";
        let vueApp = {
            data() {
                return {
                    activityId: @activityId,
                    name: "",
                    description: "",
                    image: "",
                    attractionName: "",
                    regionName: "",
                    cartId: @cartIdFromCookie,
                    selectedDate: "請選擇日期",
                    selectedProductId: "",
                    selectedPrice: "",
                    selectedQuantity: "",
                    inputQuantity: "",
                    calendarDates: [],
                    currentMonth: Number("8"),
                    currentYear: Number("2023"),


                };
            },
            mounted: function () {
                let _this = this;

                _this.getTargetActivityDto();
                _this.updateCalendar();
            },
            computed: {
                firstDay() {
                    return new Date(this.currentYear, this.currentMonth - 1, 1).getDay()
                },
                daysInMonth() {
                    return new Date(this.currentYear, this.currentMonth, 0).getDate();
                }
            },
            methods: {
                getTargetActivityDto: function () {
                    let _this = this;
                    let request = {};

                    axios.post(`${baseAddress}/api/ActivityVuePage/Id?activityId=${_this.activityId}`).then(response => {


                        _this.activityId = response.data.id
                        _this.name = response.data.name;
                        _this.description = response.data.description;
                        _this.image = response.data.image;
                        _this.attractionName = response.data.attractionName
                        _this.regionName = response.data.regionName;


                    }).catch(err => {
                        alert(err);
                    })
                },
                changeMonth: function (change) {
                    this.currentMonth += change;
                    if (this.currentMonth < 1) {
                        this.currentMonth = 12;
                        this.currentYear -= 1;
                    } else if (this.currentMonth > 12) {
                        this.currentMonth = 1;
                        this.currentYear += 1;
                    }


                    this.updateCalendar();
                },
                updateCalendar: function () {
                    //console.log('updateCalendar7788899999');
                    this.generateCalendarDates();
                },
                generateCalendarDates: function () {
                    this.calendarDates = [];
                    for (let i = 0; i < this.firstDay; i++) {
                        this.calendarDates.push({ date: null, highestPrice: null, actProducts:[], selected: false });
                    }
                    for (let i = 1; i <= this.daysInMonth; i++) {
                        const currentDate = new Date(this.currentYear, this.currentMonth - 1, i);
                        this.calendarDates.push({ date: currentDate, highestPrice: null, actProducts:[], selected: false });
                    }
                    //console.log(this.calendarDates)
                    const postData = {
                        activityId: this.activityId,
                        currentMonth: this.currentMonth,
                        currentYear: this.currentYear
                    };


                    axios.post(`${baseAddress}/api/ActivityVuePage/getProducts`, postData)
                        .then(response => {
                            console.log('response啦')
                            console.log(response)
                     



                            for (let i = 0; i < response.data.length; i++) {
                                let dateFromIso = new Date(response.data[i].date);
                                for (let j = 0; j < this.calendarDates.length; j++) {
                                    if (this.calendarDates[j].date !== null) {
                                        if (this.calendarDates[j].date.getDate() == dateFromIso.getDate()) {
                                const newActProduct = { id:response.data[i].id, price: response.data[i].price, quantity: response.data[i].quantity,startTime:response.data[] };
                                this.calendarDates[j].actProducts.push(newActProduct)                                   
                                        }
                                    }
                                }
                            }
                            console.log(this.calendarDates)
                        }).catch(err => {
                            console.log(err);
                        })
                },
                selectDate: function (dateObj) {
                    for (let i = 0; i < this.calendarDates.length; i++) {
                        this.calendarDates[i].selected = false;
                    }

                    this.selectedDate = dateObj.date.getMonth() + "月" + dateObj.date.getDate() + "日";
                    this.selectedProductId = dateObj.id;
                    this.selectedPrice = dateObj.price;
                    this.selectedQuantity = dateObj.quantity;
                    this.inputQuantity = 1;
                    dateObj.selected = true;
                },
                addToCart: function () {
                    //加入購物車
                    const postData = {
                        cartId: this.cartId,
                        actProductId: this.selectedProductId,
                        quantity: this.inputQuantity
                    }
                    console.log(postData);
                    console.log('加購物車啦')
                },
            }
        };
        let app = Vue.createApp(vueApp).mount('#app');
    </script>
}