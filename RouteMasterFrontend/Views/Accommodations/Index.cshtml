@model IEnumerable<RouteMasterFrontend.EFModels.Accommodation>

<div id="app">
<table id="imgTable">
    <thead>
        <tr>
            <th>

            </th>
        </tr>
    </thead>
    <tbody>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <div class="row mb-2">
                        <div class="col-md">
                            <div class="card mb-3">
                                <div class="row g-0">
                                    <div class="row g-0">
                                        <div class="col-md-4">
                                            <img class="card-img card-img-left" src="~/AccomodationImages/卡位.png" alt="尚未建立住所照片" />  @*@item.AccommodationImages*@
                                        </div>
                                        <div class="col-md-8">
                                            <div class="card-body">
                                                <div class="d-flex align-items-center">
                                                    <h5 class="card-title m-0">
                                                        @Html.DisplayFor(modelItem => item.Name)
                                                    </h5>
                                                    @if (!string.IsNullOrEmpty(item.Grade.ToString()))
                                                        {
                                                            <span class="score-div bg-primary text-white d-flex justify-content-center align-items-center rounded-2 ms-2" style="width: 32px; height: 32px; letter-spacing:1px">@item.Grade</span>
                                                        }
                                                </div>
                                                @*<p class="card-text">
                                                        @Html.DisplayFor(modelItem => item.Name)
                                                    </p>*@
                                                <p class="card-text">
                                                    <small class="text-muted">
                                                        @Html.DisplayFor(modelItem => item.Address)
                                                    </small>
                                                </p>
                                                @*@Html.ActionLink("繼續註冊流程", "Edit", new { id = item.Id })*@
                                                <a href="/Accommodations/Details/@item.Id" class="btn btn-outline-warning">住所資訊</a>
                                                |
                                                <input type="button" class="btn btn-danger delete-accommodation" data-id="@item.Id" id="delete-accommodation-@item.Id" value="下架住所" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>
<hr />


	<label>國家：{{Country}}</label>
	<select asp-items="@ViewBag.Country" v-model="Country"></select>

        <nav aria-label="Page navigation example">
            <ul class="pagination">
                <li class="page-item" v-for="(value, index) in totalPages" :key="index" @@click="clickHandler(value)">
                    <a :class="{'currentPage':thePage === value,'page-link':true}">{{value}}</a>
                </li>
            </ul>
        </nav>
</div>
@section Scripts{
	<script src="https://unpkg.com/vue@3.2.36/dist/vue.global.js"></script>
	<script>
		var vueApp={
			data(){
				return{
					Country:"",
                    keyword:"",
                    products:[],
                    totalPages:1,
                    thePage = 1,
				}
			},
            mounted:(()=>{
                loadProduscts();
            });
            methods:{
                loadProduscts:async ()=>{
                   const response =  await fetch(`https://localhost:7251/api/GetAccommodations?keyword=${keyword.value}&page=${thePage.value}&pageSize=3`);
                   const datas = await response.json();
                   products.value = datas.products;
                   console.log(products.value);
                   totalPages.value = datas.totalPages;
                }
            }
		}
		var app =Vue.createApp(vueApp).mount("#app");
	</script>
}